import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:geolocator/geolocator.dart';import 'package:intl_phone_field/intl_phone_field.dart';import 'package:shaded_app_freelancer/auth/login_screen.dart';import 'package:shaded_app_freelancer/models/app_color.dart';import 'package:shaded_app_freelancer/widget/app_services/app_text.dart';import 'package:shaded_app_freelancer/widget/public_widgets.dart';class UserSignupPage extends StatefulWidget {  @override  State<UserSignupPage> createState() => _UserSignupPageState();}class _UserSignupPageState extends State<UserSignupPage> {  Future<(double, double)> getLocation(context) async {    await Geolocator.checkPermission();    await Geolocator.requestPermission();    Position position = await Geolocator.getCurrentPosition(        desiredAccuracy: LocationAccuracy.high);    print('Latitude: ${position.latitude}\nLongitude: ${position.longitude}');    return (position.latitude, position.longitude);  }  @override  void initState() {    super.initState();    getLocation(context);  }  final TextEditingController fistNameController = TextEditingController();  final TextEditingController lastNameController = TextEditingController();  final TextEditingController phoneController = TextEditingController();  final TextEditingController emailController = TextEditingController();  final TextEditingController addressController = TextEditingController();  final GlobalKey<FormState> formKey = GlobalKey<FormState>();  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: defaultAppBar(context, "تسجيل الدخول كمستخدم"),      body: SingleChildScrollView(        physics: const BouncingScrollPhysics(),        child: Form(          key: formKey,          child: Center(            child: Padding(              padding: const EdgeInsets.symmetric(horizontal: 18.0),              child: Column(                mainAxisAlignment: MainAxisAlignment.center,                children: [                  Center(                    child: Stack(                      alignment: AlignmentDirectional.bottomStart,                      children: [                        Container(                          decoration: ShapeDecoration(                              shape: CircleBorder(                                  eccentricity: 0.62,                                  side: BorderSide(                                      color: Color.fromRGBO(178, 238, 238, 1),                                      width: 6))),                          child: CircleAvatar(                            radius: 50.0,                            child: Icon(Icons.person, size: 90.0),                          ),                        ),                        IconButton(                          onPressed: () {},                          icon: const Icon(CupertinoIcons.camera,                              color: Colors.white, size: 18),                          style: const ButtonStyle(                              backgroundColor: MaterialStatePropertyAll(                                  Color.fromRGBO(0, 210, 127, 1)),                              shape: MaterialStatePropertyAll(CircleBorder(                                  eccentricity: 0.62,                                  side: BorderSide(                                      color: Color.fromRGBO(178, 238, 238, 1),                                      width: 3)))),                        )                      ],                    ),                  ),                  SizedBox(height: 14),                  customEditFormField(                    controller: fistNameController,                    label: "الإسم",                    type: TextInputType.name,                    labelSize: 14.0,                    hint: "محمد",                  ),                  customEditFormField(                    controller: lastNameController,                    label: "إسم العائلة",                    type: TextInputType.name,                    labelSize: 14.0,                    hint: "عبدالله",                  ),                  customEditFormField(                    controller: emailController,                    label: "البريد الالكتروني",                    type: TextInputType.name,                    labelSize: 14.0,                    hint: "email@gmail.com",                  ),                  customEditPhoneNumber(context,                      phoneController: phoneController),                  customEditFormField(                    controller: addressController,                    label: "العنوان",                    type: TextInputType.name,                    labelSize: 14.0,                    // hint: "${getLocation(context).toString()}",                  ),                  buildButton(                      function: () {                        // if(formKey.currentState!.validate()){                        // successSnackBar(msg: "تم تسجيل الدخول بنجاح");                        ScaffoldMessenger.of(context).showSnackBar(                          SnackBar(                            duration: const Duration(                              seconds: 1,                            ),                            content: Container(                              color: appColor,                              child: CustomText(                                  'تم تسجيل الدخول بنجاح', 15, Colors.white),                            ),                          ),                        );                        // navAndFinish(context, UserHomeLayout());                        // }                      },                      color: appColor,                      colorName: Colors.white,                      hight: 45.0,                      width: 330.0,                      name: "حفظ التعديلات"),                  SizedBox(height: 30.0)                ],              ),            ),          ),        ),      ),    );  }}AppBar defaultAppBar(context, String title,        {double? height, bool isIcon = true, Widget? widget}) =>    AppBar(      automaticallyImplyLeading: false,      toolbarHeight: height != null ? height : 80,      leadingWidth: 20,      leading: isIcon == true          ? IconButton(              onPressed: () => navAndFinish(context, widget),              icon: Icon(                Icons.arrow_back_ios,                size: 18,              ))          : null,      title: Text(title,          style: tajawalArabic(              size: 18, fontWeight: FontWeight.bold, color: Colors.black87)),    );// single form field with labelWidget customEditFormField({  String? label,  double? labelSize,  String? hint,  IconData? preIcon,  IconData? postIcon,  TextInputType? type,  VoidCallback? onSubmitted,  VoidCallback? validate,  VoidCallback? onChange,  dynamic lengthTheValue,  String? whenUnCorrect,  String? whenEmpty,  TextEditingController? controller,  bool isRead = false,}) =>    Column(      crossAxisAlignment: CrossAxisAlignment.start,      children: [        Padding(          padding: const EdgeInsets.symmetric(horizontal: 8.0, vertical: 4.0),          child: Text(            label!,            style: tajawalArabic(size: labelSize, fontWeight: FontWeight.w600),          ),        ),        Padding(          padding: const EdgeInsets.symmetric(horizontal: 15.0),          child: TextFormField(            readOnly: isRead == false ? false : true,            decoration: InputDecoration(                hintText: hint,                hintStyle: tajawalArabic(color: Colors.black54),                prefixIcon: Icon(preIcon),                fillColor: Color.fromRGBO(242, 242, 242, 0.5),                focusColor: Color.fromRGBO(242, 242, 242, 0.5),                filled: true,                focusedBorder: OutlineInputBorder(                    borderRadius: BorderRadius.circular(14),                    borderSide: BorderSide(color: Colors.black54, width: 1)),                enabledBorder: OutlineInputBorder(                    borderRadius: BorderRadius.circular(14),                    borderSide: BorderSide(color: Colors.black54, width: 1)),                border: OutlineInputBorder(                    borderRadius: BorderRadius.circular(14),                    borderSide: BorderSide(color: Colors.black54, width: 1))),            keyboardType: type,            style: tajawalArabic(color: Colors.black87),            cursorColor: appColor,            controller: controller,            validator: (value) {              if (value!.isEmpty) {                return '${whenEmpty}';              } else if (value.length != lengthTheValue) {                print("Empty");                return '${whenUnCorrect}';              } else {                print("Non empty");                return null;              }            },            onChanged: (value) => onChange,          ),        ),        SizedBox(          height: 20.0,        )      ],    );Widget customEditPhoneNumber(  context, {  TextEditingController? phoneController,  Function? onChange,  Function? onTap,  Function? onSubmit,}) =>    Column(      crossAxisAlignment: CrossAxisAlignment.start,      children: [        Padding(          padding: const EdgeInsets.symmetric(horizontal: 8.0, vertical: 4.0),          child: Text(            "رقم الموبايل",            style: tajawalArabic(size: 14, fontWeight: FontWeight.w600),          ),        ),        Padding(          padding: const EdgeInsets.symmetric(horizontal: 14.0),          child: Directionality(            textDirection: TextDirection.ltr,            child: IntlPhoneField(              textAlign: TextAlign.left,              cursorColor: appColor,              decoration: InputDecoration(                filled: true,                fillColor: Color.fromRGBO(242, 242, 242, 0.5),                focusColor: Color.fromRGBO(242, 242, 242, 0.5),                border: OutlineInputBorder(                  borderRadius: BorderRadius.circular(14.0),                  borderSide: BorderSide(),                ),              ),              initialCountryCode: 'SA',              keyboardType: TextInputType.phone,              onChanged: (phone) {                print(phone.completeNumber);              },            ),          ),        ),        SizedBox(          height: 20.0,        )      ],    );